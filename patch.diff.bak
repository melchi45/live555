From f748055be892bc3f0ab741dce3adcd84166c43a5 Mon Sep 17 00:00:00 2001
From: young_ho_kim <young.ho.kim@hanwha.com>
Date: Mon, 9 May 2022 12:39:18 +0900
Subject: [PATCH] Bump up 107.1.1 [2022.04.26]

---
 .../include/BasicUsageEnvironment_version.hh  |  4 +--
 .../include/UsageEnvironment_version.hh       |  4 +--
 config.linux-with-shared-libraries            |  4 +--
 groupsock/include/groupsock_version.hh        |  4 +--
 liveMedia/RTSPClient.cpp                      | 28 +++++++++++++++++--
 liveMedia/include/RTSPClient.hh               |  6 ++++
 liveMedia/include/liveMedia_version.hh        |  4 +--
 testProgs/mikeyParse.cpp                      | 10 +++++--
 testProgs/playCommon.cpp                      | 15 ++++++++++
 9 files changed, 64 insertions(+), 15 deletions(-)

diff --git a/BasicUsageEnvironment/include/BasicUsageEnvironment_version.hh b/BasicUsageEnvironment/include/BasicUsageEnvironment_version.hh
index 4cc670a..c010978 100644
--- a/BasicUsageEnvironment/include/BasicUsageEnvironment_version.hh
+++ b/BasicUsageEnvironment/include/BasicUsageEnvironment_version.hh
@@ -19,7 +19,7 @@ along with this library; if not, write to the Free Software Foundation, Inc.,
 #ifndef _BASICUSAGEENVIRONMENT_VERSION_HH
 #define _BASICUSAGEENVIRONMENT_VERSION_HH
 
-#define BASICUSAGEENVIRONMENT_LIBRARY_VERSION_STRING	"2022.02.07"
-#define BASICUSAGEENVIRONMENT_LIBRARY_VERSION_INT		1644192000
+#define BASICUSAGEENVIRONMENT_LIBRARY_VERSION_STRING	"2022.04.26"
+#define BASICUSAGEENVIRONMENT_LIBRARY_VERSION_INT		1650931200
 
 #endif
diff --git a/UsageEnvironment/include/UsageEnvironment_version.hh b/UsageEnvironment/include/UsageEnvironment_version.hh
index 9c9cfff..ced5e9c 100644
--- a/UsageEnvironment/include/UsageEnvironment_version.hh
+++ b/UsageEnvironment/include/UsageEnvironment_version.hh
@@ -19,7 +19,7 @@ along with this library; if not, write to the Free Software Foundation, Inc.,
 #ifndef _USAGEENVIRONMENT_VERSION_HH
 #define _USAGEENVIRONMENT_VERSION_HH
 
-#define USAGEENVIRONMENT_LIBRARY_VERSION_STRING	"2022.02.07"
-#define USAGEENVIRONMENT_LIBRARY_VERSION_INT		1644192000
+#define USAGEENVIRONMENT_LIBRARY_VERSION_STRING	"2022.04.26"
+#define USAGEENVIRONMENT_LIBRARY_VERSION_INT		1650931200
 
 #endif
diff --git a/config.linux-with-shared-libraries b/config.linux-with-shared-libraries
index 96360f4..2404cb9 100644
--- a/config.linux-with-shared-libraries
+++ b/config.linux-with-shared-libraries
@@ -3,9 +3,9 @@
 # At least one interface changes, or is removed => CURRENT += 1; REVISION = 0; AGE = 0
 # One or more interfaces were added, but no existing interfaces were changed or removed => CURRENT += 1; REVISION = 0; AGE += 1
 
-libliveMedia_VERSION_CURRENT=106
+libliveMedia_VERSION_CURRENT=107
 libliveMedia_VERSION_REVISION=1
-libliveMedia_VERSION_AGE=0
+libliveMedia_VERSION_AGE=1
 libliveMedia_LIB_SUFFIX=so.$(shell expr $(libliveMedia_VERSION_CURRENT) - $(libliveMedia_VERSION_AGE)).$(libliveMedia_VERSION_AGE).$(libliveMedia_VERSION_REVISION)
 
 libBasicUsageEnvironment_VERSION_CURRENT=1
diff --git a/groupsock/include/groupsock_version.hh b/groupsock/include/groupsock_version.hh
index fa93388..175f0d3 100644
--- a/groupsock/include/groupsock_version.hh
+++ b/groupsock/include/groupsock_version.hh
@@ -19,7 +19,7 @@ along with this library; if not, write to the Free Software Foundation, Inc.,
 #ifndef _GROUPSOCK_VERSION_HH
 #define _GROUPSOCK_VERSION_HH
 
-#define GROUPSOCK_LIBRARY_VERSION_STRING	"2022.02.07"
-#define GROUPSOCK_LIBRARY_VERSION_INT		1644192000
+#define GROUPSOCK_LIBRARY_VERSION_STRING	"2022.04.26"
+#define GROUPSOCK_LIBRARY_VERSION_INT		1650931200
 
 #endif
diff --git a/liveMedia/RTSPClient.cpp b/liveMedia/RTSPClient.cpp
index 3ff4180..02909c9 100644
--- a/liveMedia/RTSPClient.cpp
+++ b/liveMedia/RTSPClient.cpp
@@ -154,6 +154,23 @@ unsigned RTSPClient::sendGetParameterCommand(MediaSession& session, responseHand
   return result;
 }
 
+static char* createRequireString(char const* requireValue) {
+  char buf[100];
+  if (requireValue == NULL) {
+    // This is the default value; we don't need a "Require:" header:
+    buf[0] = '\0';
+  } else {
+    snprintf(buf, sizeof buf, "Require: %s\r\n", requireValue);
+  }
+
+  return strDup(buf);
+}
+
+void RTSPClient::setRequireValue(char const* requireValue) {
+  delete[] fRequireStr;
+  fRequireStr = createRequireString(requireValue);
+}
+
 void RTSPClient::sendDummyUDPPackets(MediaSession& session, unsigned numDummyPackets) {
   MediaSubsessionIterator iter(session);
   MediaSubsession* subsession;
@@ -381,13 +398,16 @@ RTSPClient::RTSPClient(UsageEnvironment& env, char const* rtspURL,
     fAllowBasicAuthentication(True), fTunnelOverHTTPPortNum(tunnelOverHTTPPortNum),
     fUserAgentHeaderStr(NULL), fUserAgentHeaderStrLen(0),
     fInputSocketNum(-1), fOutputSocketNum(-1), fBaseURL(NULL), fTCPStreamIdCount(0),
-    fLastSessionId(NULL), fSessionTimeoutParameter(0), fSessionCookieCounter(0), fHTTPTunnelingConnectionIsPending(False),
+    fLastSessionId(NULL), fSessionTimeoutParameter(0), fRequireStr(NULL),
+    fSessionCookieCounter(0), fHTTPTunnelingConnectionIsPending(False),
     fTLS(*this) {
   setBaseURL(rtspURL);
 
   fResponseBuffer = new char[responseBufferSize+1];
   resetResponseBuffer();
 
+  setRequireValue();
+
   if (socketNumToServer >= 0) {
     // This socket number is (assumed to be) already connected to the server.
     // Use it, and arrange to handle responses to requests sent on it:
@@ -417,6 +437,7 @@ RTSPClient::RTSPClient(UsageEnvironment& env, char const* rtspURL,
 RTSPClient::~RTSPClient() {
   reset();
 
+  delete[] fRequireStr;
   delete[] fResponseBuffer;
   delete[] fUserAgentHeaderStr;
 }
@@ -518,6 +539,7 @@ unsigned RTSPClient::sendRequest(RequestRecord* request) {
       "%s"
       "%s"
       "%s"
+      "%s"
       "\r\n"
       "%s";
     unsigned cmdSize = strlen(cmdFmt)
@@ -525,6 +547,7 @@ unsigned RTSPClient::sendRequest(RequestRecord* request) {
       + 20 /* max int len */
       + strlen(authenticatorStr)
       + fUserAgentHeaderStrLen
+      + strlen(fRequireStr)
       + strlen(extraHeaders)
       + strlen(contentLengthHeader)
       + contentStrLen;
@@ -534,6 +557,7 @@ unsigned RTSPClient::sendRequest(RequestRecord* request) {
 	    request->cseq(),
 	    authenticatorStr,
 	    fUserAgentHeaderStr,
+	    fRequireStr,
             extraHeaders,
 	    contentLengthHeader,
 	    contentStr);
@@ -595,7 +619,7 @@ static char* createSessionString(char const* sessionId) {
   return sessionStr;
 }
 
-// Add support for faster download thru "speed:" option on PLAY
+// Add support for faster download using the "speed:" option on PLAY
 static char* createSpeedString(float speed) {
   char buf[100];
   if (speed == 1.0f ) {
diff --git a/liveMedia/include/RTSPClient.hh b/liveMedia/include/RTSPClient.hh
index e0f3219..eb9b6c2 100644
--- a/liveMedia/include/RTSPClient.hh
+++ b/liveMedia/include/RTSPClient.hh
@@ -150,6 +150,11 @@ public:
       // Issues an aggregate RTSP "GET_PARAMETER" command on "session", then returns the "CSeq" sequence number that was used in the command.
       // (The "responseHandler" and "authenticator" parameters are as described for "sendDescribeCommand".)
 
+  void setRequireValue(char const* requireValue = NULL);
+      // Sets a string to be used as the value of a "Require:" header to be included in
+      // subsequent RTSP commands.  Call "setRequireValue()" again (i.e., with no parameter)
+      // to clear this (and so stop "Require:" headers from being included in subsequent cmds).
+
   void sendDummyUDPPackets(MediaSession& session, unsigned numDummyPackets = 2);
   void sendDummyUDPPackets(MediaSubsession& subsession, unsigned numDummyPackets = 2);
       // Sends short 'dummy' (i.e., non-RTP or RTCP) UDP packets towards the server, to increase
@@ -350,6 +355,7 @@ private:
   char* fResponseBuffer;
   unsigned fResponseBytesAlreadySeen, fResponseBufferBytesLeft;
   RequestQueue fRequestsAwaitingConnection, fRequestsAwaitingHTTPTunneling, fRequestsAwaitingResponse;
+  char* fRequireStr;
 
   // Support for tunneling RTSP-over-HTTP:
   char fSessionCookie[33];
diff --git a/liveMedia/include/liveMedia_version.hh b/liveMedia/include/liveMedia_version.hh
index 8463182..7bbbbee 100644
--- a/liveMedia/include/liveMedia_version.hh
+++ b/liveMedia/include/liveMedia_version.hh
@@ -19,7 +19,7 @@ along with this library; if not, write to the Free Software Foundation, Inc.,
 #ifndef _LIVEMEDIA_VERSION_HH
 #define _LIVEMEDIA_VERSION_HH
 
-#define LIVEMEDIA_LIBRARY_VERSION_STRING	"2022.02.07"
-#define LIVEMEDIA_LIBRARY_VERSION_INT		1644192000
+#define LIVEMEDIA_LIBRARY_VERSION_STRING	"2022.04.26"
+#define LIVEMEDIA_LIBRARY_VERSION_INT		1650931200
 
 #endif
diff --git a/testProgs/mikeyParse.cpp b/testProgs/mikeyParse.cpp
index 47931df..2d8e5b3 100644
--- a/testProgs/mikeyParse.cpp
+++ b/testProgs/mikeyParse.cpp
@@ -60,10 +60,14 @@ Boolean parseMikeyHDR(u_int8_t const*& ptr, u_int8_t const* endPtr, u_int8_t& ne
   fprintf(stderr, "\tCS ID map info:\n");
   testSize(numCryptoSessions * (1+4+4)); // the size of the "CS ID map info"
   for (u_int8_t i = 1; i <= numCryptoSessions; ++i) {
+    u_int8_t policy_no = getByte(ptr);
+    u_int32_t ssrc = get4Bytes(ptr);
+    u_int32_t roc = get4Bytes(ptr);
+    
     fprintf(stderr, "\tPolicy_no_%d: %d;\tSSRC_%d: 0x%08x; ROC_%d: 0x%08x\n",
-	    i, getByte(ptr),
-	    i, get4Bytes(ptr),
-	    i, get4Bytes(ptr));
+	    i, policy_no,
+	    i, ssrc,
+	    i, roc);
   }
 
   return True;
diff --git a/testProgs/playCommon.cpp b/testProgs/playCommon.cpp
index 2676f55..bc6cdda 100644
--- a/testProgs/playCommon.cpp
+++ b/testProgs/playCommon.cpp
@@ -77,6 +77,7 @@ Boolean outputAVIFile = False;
 AVIFileSink* aviOut = NULL;
 Boolean audioOnly = False;
 Boolean videoOnly = False;
+Boolean applicationOnly = False;
 char const* singleMedium = NULL;
 int verbosityLevel = 1; // by default, print verbose output
 double duration = 0;
@@ -235,6 +236,12 @@ int main(int argc, char** argv) {
       break;
     }
 
+    case 'L': { // receive/record an 'application' (e.g., metadata) stream only
+      applicationOnly = True;
+      singleMedium = "application";
+      break;
+    }
+
     case 'V': { // disable verbose output
       verbosityLevel = 0;
       break;
@@ -575,6 +582,14 @@ int main(int argc, char** argv) {
     *env << "The -a and -v options cannot both be used!\n";
     usage();
   }
+  if (audioOnly && applicationOnly) {
+    *env << "The -a and -L options cannot both be used!\n";
+    usage();
+  }
+  if (videoOnly && applicationOnly) {
+    *env << "The -v and -L options cannot both be used!\n";
+    usage();
+  }
   if (sendOptionsRequestOnly && !sendOptionsRequest) {
     *env << "The -o and -O options cannot both be used!\n";
     usage();
-- 
2.30.2.windows.1

